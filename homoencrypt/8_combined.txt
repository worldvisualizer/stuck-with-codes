Microsoft SEAL version: 3.5.6
+---------------------------------------------------------+
| The following examples should be executed while reading |
| comments in associated files in native/examples/.       |
+---------------------------------------------------------+
| Examples                   | Source Files               |
+----------------------------+----------------------------+
| 1. BFV Basics              | 1_bfv_basics.cpp           |
| 2. Encoders                | 2_encoders.cpp             |
| 3. Levels                  | 3_levels.cpp               |
| 4. CKKS Basics             | 4_ckks_basics.cpp          |
| 5. Rotation                | 5_rotation.cpp             |
| 6. Serialization           | 6_serialization.cpp        |
| 7. Performance Test        | 7_performance.cpp          |
| 8. HE Combined Test        | 8_combined.cpp             |
+----------------------------+----------------------------+
[      0 MB] Total allocation from the memory pool

> Run example (1 ~ 8) or exit (0): 8

+--------------------------------------+
|    Example: HE Combined Test         |
+--------------------------------------+
/
| Encryption parameters :
|   scheme: CKKS
|   poly_modulus_degree: 8192
|   coeff_modulus size: 208 (40 + 36 + 36 + 36 + 36 + 24) bits
\

Line  61 --> Encrypting A and B
   + Scale of A_encrypted: 36 bits
   + Scale of B_encrypted: 36 bits
   + Modulus chain index for A_encrypted: 4

Line  73 --> Multiplying A and B
   + Scale of AB_encrypted before rescale: 72 bits
   + Scale of AB_encrypted after rescale: 36 bits
   + Modulus chain index for AB_encrypted: 3

Line  85 --> Square AB
   + Scale of AB_square_encrypted before rescale: 72 bits
   + Scale of AB_square_encrypted after rescale: 36 bits
   + Modulus chain index for AB_square_encrypted: 2

Line  97 --> Square square of AB
   + Scale of AB_square_square_encrypted before rescale: 72.0001 bits
   + Scale of AB_square_square_encrypted after rescale: 36.0001 bits
   + Modulus chain index for AB_square_square_encrypted: 1

Line 109 --> Multiply 5 by A
   + Scale of five_A_encrypted before rescale: 72 bits
   + Scale of five_A_encrypted after rescale: 36 bits
   + Modulus chain index for five_A_encrypted: 3

Line 121 --> Mod switching of 5 times A
   + Scale of five_A_encrypted after first mod switch: 36 bits
   + Scale of five_A_encrypted after second mod switch: 36 bits
   + Modulus chain index for five_A_encrypted: 1

Line 131 --> Final multiplication of (AB^2)^2 and 5*A
   + Scale of result_encrypted before rescale: 72.0001 bits
   + Scale of result_encrypted after rescale: 36.0001 bits
   + Modulus chain index for result_encrypted: 0

Line 143 --> Decrypting result

    [ 0.0499892, 0.0499693, 0.0500002, ..., 0.0499973, 0.0499965, 0.0500039 ]
