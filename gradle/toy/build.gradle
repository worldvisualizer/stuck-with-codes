import org.apache.commons.codec.binary.Base64

// this is the config about the build script.
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
    	// this makes import Base64 possible.
        classpath group: 'commons-codec', name: 'commons-codec', version: '1.2'
    }
}

plugins {
    id "base"
}

// if no other options provided to ./gradlew,
// then these tasks are executed
defaultTasks 'cleaning', 'running'

task cleaning {
    doLast {
        println 'Default Cleaning!'
    }
}

task running {
    doLast {
        println 'Default Running!'
    }
}

task other {
    doLast {
        println "I'm not a default task!"
    }
}

task zip(type: Zip, group: "Archive", description: "Archive zip") {
    from "src"
    archiveFileName = "toy-1.0.zip"
}

task hello {
    doLast {
        println "Hello World!" // 2nd
    }
}

hello.doFirst {
	println "Hello all!" // 1st
}
hello.doLast {
	println "Hello you!" // 3rd
}
hello { // would this work?
	doLast {
		println "Hello us!" // 4th
	}
}

task intro {
	dependsOn hello
	doLast {
		println "I am Joseph"
	}
}

task count {
	doLast {
		4.times { print "$it " }
	}
}

4.times { counter -> 
	task "task$counter" {
		doLast {
			println "I am task $counter"
		}
	}
}
task1.dependsOn task2, task3 // task API

task upper {
	doLast {
		String someString = "myname"
		println "Original: $someString"
		println "Uppercase: ${someString.toUpperCase()}"
	}
}

task myTask {
    ext.myProperty = "myValue"
}

task printTaskProperties {
    doLast {
        println myTask.myProperty
    }
}

task checksum {
    doLast {
        fileList('./antLoadfileResources').each { File file ->
            ant.checksum(file: file, property: "cs_$file.name")
            println "$file.name Checksum: ${ant.properties["cs_$file.name"]}"
        }
    }
}

task loadfile {
    doLast {
        fileList('./antLoadfileResources').each { File file ->
            ant.loadfile(srcFile: file, property: file.name)
            println "I'm fond of $file.name"
        }
    }
}

// Groovy functions 
File[] fileList(String dir) {
    file(dir).listFiles({file -> file.isFile() } as FileFilter).sort()
}

task distribution {
	doLast {
		println "we build zip with version = $version"
	}
}

task release {
	dependsOn "distribution"
	doLast {
		println "we release now!"
	}
}

// you can control the flow of the tasks
gradle.taskGraph.whenReady { taskGraph -> 
	if (taskGraph.hasTask(":release")) {
		version = '1.0'
	} else {
		version = '1.0-SNAPSHOT'
	}
}

task encode {
    doLast {
        def byte[] encodedString = new Base64().encode('hello world\n'.getBytes())
        println new String(encodedString)
    }
}
